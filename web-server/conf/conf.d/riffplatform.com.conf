map $http_upgrade $connection_upgrade
{
    default upgrade;
    '' close;
}

upstream rtc_upstream
{
    server riff-rtc:3001;
}

upstream videodata_upstream
{
    server riff-server:3000;
}

upstream signalmaster_upstream
{
    server signalmaster:8888;
}

server
{
    listen 80;

    include proxy_params;

    location /
    {
        # index.html is special request it from the rtc_upstream
        location ~ index\.html$
        {
            proxy_pass http://rtc_upstream;
            include cors_params;
        }

        # all file requests can be served by nginx
        location ~ /[^./]+\.[^./]+$
        {
            root /usr/share/nginx/html/rtc;
        }

        # pass everything else to the rtc_upstream
        location ~ .*
        {
            proxy_pass http://rtc_upstream;
            include cors_params;
        }
    }

    location /favicon.ico
    {
        root /usr/share/nginx/html;
    }

    location /lti_launch
    {
        proxy_pass http://rtc_upstream/lti_launch;
    }

    location /dashboard
    {
        root /usr/share/nginx/html/dashboard;
    }

    location /api/videodata
    {
        proxy_pass http://videodata_upstream;
    }

# See these references on how to supply a path so we can reverse proxy
# multiple upstream websocket connections since they can't all use /socket.io
# https://stackoverflow.com/questions/25896225/how-do-i-get-socket-io-running-for-a-subdirectory
# https://serverfault.com/questions/645643/using-nginx-to-proxy-multiple-instances-of-sockets-io
    location /api/videodata/socket.io/
    {
        proxy_pass http://videodata_upstream/socket.io/;
        include proxy_websocket_params;
        include cors_params;
    }

    location /api/signalmaster/socket.io/
    {
        proxy_pass http://signalmaster_upstream/socket.io/;
        include proxy_websocket_params;
    }

# SimpleWebRtc doesn't support configuring the socket.io path (yet)
# so we'll let it use the default path
    location /socket.io/
    {
        proxy_pass http://signalmaster_upstream/socket.io/;
        include proxy_websocket_params;
        include cors_params;
    }

    location /sockjs-node/ {
        proxy_pass http://videodata_upstream/socket.io/;
        include proxy_websocket_params;
        include cors_params;
    }
}
